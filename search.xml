<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Others usage</title>
      <link href="/2020/01/11/others/"/>
      <url>/2020/01/11/others/</url>
      
        <content type="html"><![CDATA[<h2 id="Win7-激活"><a href="#Win7-激活" class="headerlink" title="Win7 激活"></a>Win7 激活</h2><p><a href="http://www.yishimei.cn/network/319.html" target="_blank" rel="noopener">亦是美网络</a> KMS 神龙版</p><h2 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h2><h3 id="printable"><a href="#printable" class="headerlink" title="printable"></a>printable</h3><p>0x21 - 0x7e</p>]]></content>
      
      
      <categories>
          
          <category> notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim</title>
      <link href="/2020/01/11/vim/"/>
      <url>/2020/01/11/vim/</url>
      
        <content type="html"><![CDATA[<h2 id="文本替换"><a href="#文本替换" class="headerlink" title="文本替换"></a>文本替换</h2><h3 id="普通替换"><a href="#普通替换" class="headerlink" title="普通替换"></a>普通替换</h3><p>%s 表示全文，g 表示全部替换</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:[range]s/[from]/[to]/[flags]</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><p>全文替换 from 到 to</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/from/to/g</span><br></pre></td></tr></table></figure><h3 id="正则替换写法"><a href="#正则替换写法" class="headerlink" title="正则替换写法"></a>正则替换写法</h3><p>使用  \v 后之后的内容就不需要人为转义了。</p><figure class="highlight shell"><figcaption><span>scrpt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/\v(\W)/\\\1/g # 对所有的非字母、数字字符添加 \</span><br></pre></td></tr></table></figure><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>查找当前单词：<code>shift + *</code>，使用 <code>n</code> 查找下一个，使用 <code>N</code> 查找上一个</p><p>gd 也可以达到类似效果</p>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
            <tag> editor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu CLI</title>
      <link href="/2020/01/11/ubuntu-cli/"/>
      <url>/2020/01/11/ubuntu-cli/</url>
      
        <content type="html"><![CDATA[<h2 id="scp-文件传输"><a href="#scp-文件传输" class="headerlink" title="scp: 文件传输"></a>scp: 文件传输</h2><h3 id="from-local-to-server"><a href="#from-local-to-server" class="headerlink" title="from local to server"></a>from local to server</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r &#123;your folder or file&#125; &#123;username&#125;@&#123;ip address&#125;:&#123;folder in server&#125;</span><br></pre></td></tr></table></figure><h3 id="from-server-to-local"><a href="#from-server-to-local" class="headerlink" title="from server to local"></a>from server to local</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">scp -r </span><span class="template-variable">&#123;username&#125;</span><span class="xml">@</span><span class="template-variable">&#123;ip address&#125;</span><span class="xml">:</span><span class="template-variable">&#123;folder in server&#125;</span><span class="xml"> </span><span class="template-variable">&#123;your folder or file&#125;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="zombie"><a href="#zombie" class="headerlink" title="zombie"></a>zombie</h2><p>杀死僵尸进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep "Z"  # find zombie progress</span><br><span class="line">kill -9 $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '&#123; print $2 &#125;')</span><br></pre></td></tr></table></figure><h2 id="iconv-格式转换"><a href="#iconv-格式转换" class="headerlink" title="iconv: 格式转换"></a>iconv: 格式转换</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f UTF-8 -t GBK &#123;from-file&#125; -o &#123;to-file&#125;</span><br></pre></td></tr></table></figure><h2 id="fdisk-amp-parted-挂载-2T-硬盘"><a href="#fdisk-amp-parted-挂载-2T-硬盘" class="headerlink" title="fdisk &amp; parted: 挂载 2T+ 硬盘"></a>fdisk &amp; parted: 挂载 2T+ 硬盘</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo fdisk -l  # find the unmounted disk, say /dev/sdb or so</span><br><span class="line"><span class="meta">#</span><span class="bash"> WARNING: Carefully check <span class="built_in">which</span> dir you should part!</span></span><br><span class="line">sudo parted /dev/sdb  # enter parted</span><br><span class="line">(parted) mklabel gpt</span><br><span class="line">(parted) mkpart primary 1 100%</span><br><span class="line"><span class="meta">#</span><span class="bash"> Warning: The resulting partition is not properly aligned <span class="keyword">for</span> best performance.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Ignore/Cancel?</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> you meet this problem, change 1 to another value like 0 or so.</span></span><br><span class="line">(parted) print  # check the result of patition</span><br><span class="line">(parted) quit  # quit</span><br><span class="line">sudo mkfs.ext4 -F /dev/sdb</span><br><span class="line"><span class="meta">#</span><span class="bash"> auto mount the disk</span></span><br><span class="line">sudo blkid  # copy the UUID of mounted disk</span><br><span class="line">sudo vim /etc/fstab # add a line of UUID of disk, and new disk is mounted to /disk</span><br><span class="line">UUID=******** /disk ext4 defaults 0 0</span><br><span class="line">reboot</span><br><span class="line"><span class="meta">#</span><span class="bash"> chmod a+rw /disk  make sure what you are doing before run this <span class="built_in">command</span>!</span></span><br></pre></td></tr></table></figure><h2 id="Error-watch-xxx-ENOSPC"><a href="#Error-watch-xxx-ENOSPC" class="headerlink" title="Error: watch xxx ENOSPC"></a><a href="https://yq.aliyun.com/articles/600560" target="_blank" rel="noopener">Error: watch xxx ENOSPC</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo fs.inotify.max_user_watches=666666 \</span><br><span class="line">| sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure><p><strong>错误原因</strong><br>　　就是一个程序监控的文件数量超出了设定值，这行命令就是把设定的值改大一些</p><p><strong>解释一下这行命令的意思</strong><br>将 <code>echo fs.inotify.max_user_watches=666666</code> 的输出内容，<br>也就是＂fs.inotify.max_user_watches=666666＂通过｜传给后面的命令，然后tee将前面的传过来的内容输出到标准输出的同时，追加到文件file中。如果文件不存在，则创建；如果已经存在，就在末尾追加内容，而不是覆盖，最后是系统重新加载配置文件，使更改生效．<br><strong>大家可以到<code>/proc/sys/fs/inotify</code>下查看自己更改的值</strong></p><h2 id="Tmux"><a href="#Tmux" class="headerlink" title="Tmux"></a>Tmux</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">tmux at -t &lt;name&gt;  # re-enter a session</span><br><span class="line">tmux new -s &lt;name&gt;  # create a session named &lt;name&gt;</span><br><span class="line">tmux ls  # list all sessions</span><br><span class="line">tmux kill-session -t &lt;name&gt;  # remove session named &lt;name&gt;</span><br><span class="line"></span><br><span class="line">ctrl+b+d # leave the session</span><br><span class="line"></span><br><span class="line">ctrl+b+$ # rename current session</span><br><span class="line">ctrl+b+s # list sessions</span><br><span class="line"></span><br><span class="line">ctrl+b+c # create window</span><br><span class="line">ctrl+b+, # rename current window</span><br><span class="line">ctrl+b+w # list windows</span><br><span class="line">ctrl+b+&amp; # close current window</span><br><span class="line"></span><br><span class="line">ctrl+b+% # vertically split the window, get a new pane</span><br><span class="line">ctrl+b+\" # horizontally split the window, get a new pane</span><br><span class="line">ctrl+b+Arrow # shift from pane</span><br><span class="line">ctrl+b+q # show the number of panes, press &lt;number&gt; to specified pane</span><br><span class="line">ctrl+b+x # close the pane</span><br><span class="line"></span><br><span class="line">ctrl+b+[ # view history of terminal</span><br></pre></td></tr></table></figure><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="dockerignore"><a href="#dockerignore" class="headerlink" title=".dockerignore"></a>.dockerignore</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.git</span><br></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><h4 id="build"><a href="#build" class="headerlink" title="build"></a>build</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t &lt;image&gt;[:&lt;tag&gt;] . # default tag is latest</span><br></pre></td></tr></table></figure><h3 id="stop-container-s"><a href="#stop-container-s" class="headerlink" title="stop container(s)"></a>stop container(s)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker stop &lt;container ID&gt; # stop specified container</span><br><span class="line"><span class="meta">#</span><span class="bash"> stop container <span class="built_in">which</span> match the regex</span></span><br><span class="line">docker stop $(docker ps | awk '/regex/ print $1')</span><br></pre></td></tr></table></figure><h3 id="remove-container-s"><a href="#remove-container-s" class="headerlink" title="remove container(s)"></a>remove container(s)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rm &lt;container ID&gt; # remove specified container</span><br><span class="line">docker rm $(docker ps -a -p) # remove all containers</span><br></pre></td></tr></table></figure><h3 id="remove-image-s"><a href="#remove-image-s" class="headerlink" title="remove image(s)"></a>remove image(s)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &lt;image&gt; # remove specified imgae</span><br><span class="line">docker rm $(docker image ls) # remove all images</span><br></pre></td></tr></table></figure><h3 id="create-a-container"><a href="#create-a-container" class="headerlink" title="create a container"></a>create a container</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> create a container and run backend</span></span><br><span class="line">docker run -d -it --name="specified-name" &lt;image&gt;</span><br></pre></td></tr></table></figure><h3 id="enter-a-container"><a href="#enter-a-container" class="headerlink" title="enter a container"></a>enter a container</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach &lt;container ID&gt; # enter a running container</span><br></pre></td></tr></table></figure><h3 id="exit-from-a-container"><a href="#exit-from-a-container" class="headerlink" title="exit from a container"></a>exit from a container</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+<span class="selector-tag">p</span>, ctrl+q</span><br></pre></td></tr></table></figure><h2 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service cron start // 启动服务</span><br><span class="line">service cron stop // 关闭服务</span><br><span class="line">service cron restart // 重启服务</span><br><span class="line">service cron reload // 重新载入配置</span><br></pre></td></tr></table></figure><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 5 * * * command args...</span><br></pre></td></tr></table></figure><h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><figure class="highlight shell"><figcaption><span>scrpt</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot command args...</span><br></pre></td></tr></table></figure><h2 id="no-pie-x-executale"><a href="#no-pie-x-executale" class="headerlink" title="-no-pie: x-executale"></a>-no-pie: x-executale</h2><p>在编译成可执行文件时在最后添加 <code>-no-pie</code> 参数。</p><h2 id="清理磁盘"><a href="#清理磁盘" class="headerlink" title="清理磁盘"></a>清理磁盘</h2><h3 id="清理日志"><a href="#清理日志" class="headerlink" title="清理日志"></a>清理日志</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl --vacuum-size=10M</span><br></pre></td></tr></table></figure><h2 id="dpkg"><a href="#dpkg" class="headerlink" title="dpkg"></a>dpkg</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i &lt;*.deb&gt;  # install</span><br><span class="line">sudo apt -f install  # fix the dependency</span><br></pre></td></tr></table></figure><h3 id="dpkg-处理软件包-xxxxxx-–-configure-时出错"><a href="#dpkg-处理软件包-xxxxxx-–-configure-时出错" class="headerlink" title="dpkg: 处理软件包 xxxxxx (– configure)时出错"></a>dpkg: 处理软件包 xxxxxx (– configure)时出错</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old # 现将info文件夹更名</span><br><span class="line">sudo mkdir /var/lib/dpkg/info # 再新建一个新的info文件夹</span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get -f install # 更新源列表，更新软件</span><br><span class="line">sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old # 执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info_old文件夹下</span><br><span class="line">sudo rm -rf /var/lib/dpkg/info # 把自己新建的info文件夹删掉</span><br><span class="line">sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info # 把以前的info文件夹重新改</span><br></pre></td></tr></table></figure><h2 id="PID"><a href="#PID" class="headerlink" title="PID"></a>PID</h2><h3 id="查看端口号对应的-PID"><a href="#查看端口号对应的-PID" class="headerlink" title="查看端口号对应的 PID"></a>查看端口号对应的 PID</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8888</span><br></pre></td></tr></table></figure><h3 id="杀死-PID-对应的程序"><a href="#杀死-PID-对应的程序" class="headerlink" title="杀死 PID 对应的程序"></a>杀死 PID 对应的程序</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure><h2 id="查看文件（夹）大小"><a href="#查看文件（夹）大小" class="headerlink" title="查看文件（夹）大小"></a>查看文件（夹）大小</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -lh filename  # 文件</span><br><span class="line">du -sh  # 当前文件夹大小</span><br><span class="line">du -h --max-depth=1  # 当前文件夹及子目录大小</span><br></pre></td></tr></table></figure><h2 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep "some message"</span><br></pre></td></tr></table></figure><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><ul><li>-P 使用正则表达式</li><li>-o 只输出匹配到的结果</li></ul><h3 id="前瞻、后顾"><a href="#前瞻、后顾" class="headerlink" title="前瞻、后顾"></a>前瞻、后顾</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo "Here is a string, and Here is another" | grep -o -P "(?&lt;=Here).*(?=string)" </span><br><span class="line"><span class="meta">#</span><span class="bash"> is a string, and Here is another <span class="comment">#greedy</span></span></span><br><span class="line">echo "Here is a string, and Here is another" | grep -o -P "(?&lt;=Here).*?(?=string)" </span><br><span class="line"><span class="meta">#</span><span class="bash"> is a </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is another</span></span><br></pre></td></tr></table></figure><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><h3 id="处理列数据"><a href="#处理列数据" class="headerlink" title="处理列数据"></a>处理列数据</h3><p>第一列是字符串，第二列是数字，以下代码找出第二列的值 <code>&gt;= 10^20</code> 的列</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat columns.csv | awk -F "\t" '&#123;if ($2 &gt;= 10^20) printf("%s\t%f\n", $1, $2)&#125;'</span><br></pre></td></tr></table></figure><h3 id="交换列数据"><a href="#交换列数据" class="headerlink" title="交换列数据"></a>交换列数据</h3><p>以下代码交换第一列和第二列的顺序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat columns.csv | awk -F "," '&#123;printf("%f\t%s\n", $2, $1)&#125;'</span><br></pre></td></tr></table></figure><h2 id="Zsh-amp-Oh-my-zsh"><a href="#Zsh-amp-Oh-my-zsh" class="headerlink" title="Zsh &amp; Oh my zsh"></a>Zsh &amp; Oh my zsh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y git</span><br><span class="line">sudo apt install  -y zsh</span><br><span class="line">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br><span class="line">chsh -s /usr/bin/zsh</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="fix-zsh-history"><a href="#fix-zsh-history" class="headerlink" title="fix .zsh_history"></a>fix .zsh_history</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Fixes a corrupt .zsh_history file</span></span><br><span class="line"></span><br><span class="line">mv ~/.zsh_history ~/.zsh_history_bad</span><br><span class="line">strings ~/.zsh_history_bad &gt; ~/.zsh_history</span><br><span class="line">fc -R ~/.zsh_history</span><br><span class="line">rm ~/.zsh_history_bad</span><br></pre></td></tr></table></figure><h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> add Typora<span class="string">'s repository</span></span></span><br><span class="line">sudo add-apt-repository 'deb http://typora.io linux/'</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> install typora</span></span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">STYLE</span>=<span class="string">"page-break-after: always;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Fcitx-wubi"><a href="#Fcitx-wubi" class="headerlink" title="Fcitx wubi"></a>Fcitx wubi</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install fcitx-wubi</span><br></pre></td></tr></table></figure><h2 id="Ubuntu-18-Server"><a href="#Ubuntu-18-Server" class="headerlink" title="Ubuntu:18 Server"></a>Ubuntu:18 Server</h2><h3 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/netplan/***.yaml</span><br></pre></td></tr></table></figure><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service systemd-resolved start</span><br></pre></td></tr></table></figure><h3 id="加入开机启动"><a href="#加入开机启动" class="headerlink" title="加入开机启动"></a>加入开机启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable systemd-resolved</span><br></pre></td></tr></table></figure><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><h3 id="E-无法获得锁-var-lib-apt-lists-lock-open-11-资源暂时不可用"><a href="#E-无法获得锁-var-lib-apt-lists-lock-open-11-资源暂时不可用" class="headerlink" title="E: 无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用)"></a>E: 无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/lib/apt/lists/lock</span><br></pre></td></tr></table></figure><h2 id="安装新字体"><a href="#安装新字体" class="headerlink" title="安装新字体"></a>安装新字体</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/ryanoasis/nerd-fonts/blob/master/patched-fonts/DroidSansMono/complete/Droid%20Sans%20Mono%20Nerd%20Font%20Complete%20Mono.otf</span><br><span class="line">sudo mkdir -p /usr/share/fonts/custom</span><br><span class="line">sudo mv Monaco.ttf /usr/share/fonts/custom</span><br><span class="line">sudo chmod 744 /usr/share/fonts/custom/Monaco.ttf</span><br><span class="line"></span><br><span class="line">sudo mkfontscale  #生成核心字体信息</span><br><span class="line">sudo mkfontdir</span><br><span class="line">sudo fc-cache -fv</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
            <tag> ubuntu </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RegExp</title>
      <link href="/2020/01/11/regexp/"/>
      <url>/2020/01/11/regexp/</url>
      
        <content type="html"><![CDATA[<h2 id="前瞻、后顾"><a href="#前瞻、后顾" class="headerlink" title="前瞻、后顾"></a>前瞻、后顾</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Here is a string, and Here is another"</span> | grep -o -P <span class="string">"(?&lt;=Here).*(?=string)"</span> </span><br><span class="line"><span class="comment"># is a string, and Here is another #greedy</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Here is a string, and Here is another"</span> | grep -o -P <span class="string">"(?&lt;=Here).*?(?=string)"</span> </span><br><span class="line"><span class="comment"># is a </span></span><br><span class="line"><span class="comment"># is another</span></span><br></pre></td></tr></table></figure><h2 id="Date-日期"><a href="#Date-日期" class="headerlink" title="Date 日期"></a>Date 日期</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((^((1[8-9]\d&#123;2&#125;)|([2-9]\d&#123;3&#125;))([-&#x2F;._])(10|12|0?[13578])([-&#x2F;._])(3[01]|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d&#123;2&#125;)|([2-9]\d&#123;3&#125;))([-&#x2F;._])(11|0?[469])([-&#x2F;._])(30|[12][0-9]|0?[1-9])$)|(^((1[8-9]\d&#123;2&#125;)|([2-9]\d&#123;3&#125;))([-&#x2F;._])(0?2)([-&#x2F;._])(2[0-8]|1[0-9]|0?[1-9])$)|(^([2468][048]00)([-&#x2F;._])(0?2)([-&#x2F;._])(29)$)|(^([3579][26]00)([-&#x2F;._])(0?2)([-&#x2F;._])(29)$)|(^([1][89][0][48])([-&#x2F;._])(0?2)([-&#x2F;._])(29)$)|(^([2-9][0-9][0][48])([-&#x2F;._])(0?2)([-&#x2F;._])(29)$)|(^([1][89][2468][048])([-&#x2F;._])(0?2)([-&#x2F;._])(29)$)|(^([2-9][0-9][2468][048])([-&#x2F;._])(0?2)([-&#x2F;._])(29)$)|(^([1][89][13579][26])([-&#x2F;._])(0?2)([-&#x2F;._])(29)$)|(^([2-9][0-9][13579][26])([-&#x2F;._])(0?2)([-&#x2F;._])(29)$))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
            <tag> languages </tag>
            
            <tag> regexp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="/2020/01/11/python/"/>
      <url>/2020/01/11/python/</url>
      
        <content type="html"><![CDATA[<h2 id="py-run-as-executable"><a href="#py-run-as-executable" class="headerlink" title="*.py run as executable"></a>*.py run as executable</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis python3  <span class="comment"># find python intepreter</span></span><br></pre></td></tr></table></figure><p>add the following code to the first line of *.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x [filename].py  <span class="comment"># add(+) &#123;executable&#125; permission(x) to current user(u)</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Python-venv-虚拟环境"><a href="#Python-venv-虚拟环境" class="headerlink" title="Python venv 虚拟环境"></a>Python venv 虚拟环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt-get install python3.x-venv first</span></span><br><span class="line">python3 -m venv /path/to/new/virtual/environment  <span class="comment"># 创建</span></span><br><span class="line"><span class="built_in">source</span> venv/bin/active <span class="comment"># 激活</span></span><br><span class="line">deactivate <span class="comment"># 退出</span></span><br></pre></td></tr></table></figure><h2 id="f-string"><a href="#f-string" class="headerlink" title="f-string"></a>f-string</h2><p>f-string 的大括号内不能出现 <code>\</code> 字面量，如果一定要用，就声明一个变量，如 <code>right_splash = &#39;\&#39;</code></p><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><h3 id="pip-升级后报错"><a href="#pip-升级后报错" class="headerlink" title="pip 升级后报错"></a>pip 升级后报错</h3><p><strong>报错内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">File <span class="string">"/usr/bin/pip"</span>, line 9, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">from pip import main</span><br></pre></td></tr></table></figure><p><strong>修改</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> pip3</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pip <span class="keyword">import</span> __main__  <span class="comment"># changed</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    sys.exit(__main__._main())  <span class="comment"># changed</span></span><br></pre></td></tr></table></figure><h3 id="zipfile-BadZipFile-File-is-not-a-zip-file"><a href="#zipfile-BadZipFile-File-is-not-a-zip-file" class="headerlink" title="zipfile.BadZipFile: File is not a zip file"></a>zipfile.BadZipFile: File is not a zip file</h3><p>出现这个问题时，定位到报错地点，查看是哪个文件“is not a zip file”，看是不是文件不存在或已损坏</p>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
            <tag> languages </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJS</title>
      <link href="/2020/01/11/nodejs/"/>
      <url>/2020/01/11/nodejs/</url>
      
        <content type="html"><![CDATA[<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt install npm</span><br></pre></td></tr></table></figure><h2 id="Upgrade"><a href="#Upgrade" class="headerlink" title="Upgrade"></a>Upgrade</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo npm cache clean -f</span><br><span class="line">sudo npm install -g n</span><br><span class="line">sudo n stable</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="NPM-upgrade"><a href="#NPM-upgrade" class="headerlink" title="NPM upgrade"></a>NPM upgrade</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm i -g npm</span><br></pre></td></tr></table></figure><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><h3 id="Module-not-found-Can’t-resolve-‘react-router-dom’"><a href="#Module-not-found-Can’t-resolve-‘react-router-dom’" class="headerlink" title="Module not found: Can’t resolve ‘react-router-dom’"></a>Module not found: Can’t resolve ‘react-router-dom’</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -S react-router-dom</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
            <tag> languages </tag>
            
            <tag> js </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java</title>
      <link href="/2020/01/11/java/"/>
      <url>/2020/01/11/java/</url>
      
        <content type="html"><![CDATA[<h2 id="jdk11"><a href="#jdk11" class="headerlink" title="jdk11"></a>jdk11</h2><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html</span></span><br><span class="line">mv jdk11.tar.gz /usr/<span class="built_in">local</span>/share/</span><br><span class="line">sudo vim ~/.zshrc</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME= <span class="comment"># 这里填写你安装的路径</span></span><br><span class="line"><span class="built_in">export</span> CLASSPATH =.: <span class="variable">$&#123;JAVA_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH = <span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> usage </tag>
            
            <tag> languages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker usage</title>
      <link href="/2020/01/11/docker/"/>
      <url>/2020/01/11/docker/</url>
      
        <content type="html"><![CDATA[<h3 id="dockerignore"><a href="#dockerignore" class="headerlink" title=".dockerignore"></a>.dockerignore</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.git</span><br></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><h4 id="build"><a href="#build" class="headerlink" title="build"></a>build</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t &lt;image&gt;[:&lt;tag&gt;] . <span class="comment"># default tag is latest</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="stop-container-s"><a href="#stop-container-s" class="headerlink" title="stop container(s)"></a>stop container(s)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker stop &lt;container ID&gt; <span class="comment"># stop specified container</span></span><br><span class="line"><span class="comment"># stop container which match the regex</span></span><br><span class="line">docker stop $(docker ps | awk <span class="string">'/regex/ print $1'</span>)</span><br></pre></td></tr></table></figure><h3 id="remove-container-s"><a href="#remove-container-s" class="headerlink" title="remove container(s)"></a>remove container(s)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rm &lt;container ID&gt; <span class="comment"># remove specified container</span></span><br><span class="line">docker rm $(docker ps -a -p) <span class="comment"># remove all containers</span></span><br></pre></td></tr></table></figure><h3 id="remove-image-s"><a href="#remove-image-s" class="headerlink" title="remove image(s)"></a>remove image(s)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &lt;image&gt; <span class="comment"># remove specified imgae</span></span><br><span class="line">docker rm $(docker image ls) <span class="comment"># remove all images</span></span><br></pre></td></tr></table></figure><h3 id="create-a-container"><a href="#create-a-container" class="headerlink" title="create a container"></a>create a container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create a container and run backend</span></span><br><span class="line">docker run -d -it --name=<span class="string">"specified-name"</span> &lt;image&gt;</span><br></pre></td></tr></table></figure><h3 id="enter-a-container"><a href="#enter-a-container" class="headerlink" title="enter a container"></a>enter a container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach &lt;container ID&gt; <span class="comment"># enter a running container</span></span><br></pre></td></tr></table></figure><h3 id="exit-from-a-container"><a href="#exit-from-a-container" class="headerlink" title="exit from a container"></a>exit from a container</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+<span class="selector-tag">p</span>, ctrl+q</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git usage</title>
      <link href="/2020/01/11/git/"/>
      <url>/2020/01/11/git/</url>
      
        <content type="html"><![CDATA[<h2 id="use-Vim-默认编辑器"><a href="#use-Vim-默认编辑器" class="headerlink" title="use Vim: 默认编辑器"></a>use Vim: 默认编辑器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.editor <span class="string">"vim"</span></span><br></pre></td></tr></table></figure><h2 id="remote-远程仓库"><a href="#remote-远程仓库" class="headerlink" title="remote: 远程仓库"></a>remote: 远程仓库</h2><h3 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v  <span class="comment"># show the address of remote repo</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="删除远程仓库"><a href="#删除远程仓库" class="headerlink" title="删除远程仓库"></a>删除远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin your-repo-address</span><br></pre></td></tr></table></figure><h3 id="pull-更新本地仓库"><a href="#pull-更新本地仓库" class="headerlink" title="pull: 更新本地仓库"></a>pull: 更新本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br><span class="line">git submodule update  <span class="comment"># 更新子模块</span></span><br><span class="line">git stash  <span class="comment"># 如果要切换并修改其他分支，可以先运行这条指令暂存当前修改</span></span><br></pre></td></tr></table></figure><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch name&gt;  <span class="comment"># 切换到分支</span></span><br><span class="line">git checkout -b &lt;branch name&gt;  <span class="comment"># 创建分支，并切换</span></span><br></pre></td></tr></table></figure><h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><h3 id="在被忽略文件夹下，不忽略指定文件（夹）"><a href="#在被忽略文件夹下，不忽略指定文件（夹）" class="headerlink" title="在被忽略文件夹下，不忽略指定文件（夹）"></a>在被忽略文件夹下，不忽略指定文件（夹）</h3><p>被忽略的文件夹以 * 结尾，表示忽略的是文件夹下的文件，而不是文件夹本身（猜的）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/dir-to-be-ignored/*  <span class="comment"># should end with *</span></span><br><span class="line">!/dir-to-be-ignored/<span class="keyword">do</span>-not-ignore-dir/</span><br></pre></td></tr></table></figure><h2 id="在所有记录中删除文件或文件夹"><a href="#在所有记录中删除文件或文件夹" class="headerlink" title="在所有记录中删除文件或文件夹"></a>在所有记录中删除文件或文件夹</h2><p>在使用这条命令之前保证运行过 <code>git stash</code> 或者已提交修改</p><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --force --index-filter \</span><br><span class="line">  <span class="string">'git rm --cached --ignore-unmatch &#123;file-to-remove&#125;'</span> \</span><br><span class="line">  --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure><h3 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --force --index-filter \</span><br><span class="line">  <span class="string">'git rm -r --cached --ignore-unmatch &#123;dir-to-remove&#125;'</span> \</span><br><span class="line">  --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure><h2 id="submodule-子模块"><a href="#submodule-子模块" class="headerlink" title="submodule 子模块"></a>submodule 子模块</h2><h3 id="添加子模块"><a href="#添加子模块" class="headerlink" title="添加子模块"></a>添加子模块</h3><p>将会创建并写入 .gitmodules 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule add &#123;your-repo-address&#125; &#123;<span class="built_in">which</span>-dir-to-save&#125;</span><br></pre></td></tr></table></figure><h3 id="更新子模块"><a href="#更新子模块" class="headerlink" title="更新子模块"></a>更新子模块</h3><p>一般来讲，在 clone 带有子模块的仓库后，子模块的指针指向 master 所指向的是一致的，但是并不能 pull，要先 <code>git checkout master</code> 然后再更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure><h3 id="clone-克隆带有子模块的仓库"><a href="#clone-克隆带有子模块的仓库" class="headerlink" title="clone 克隆带有子模块的仓库"></a>clone 克隆带有子模块的仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive &#123;repo-address&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dev </category>
          
      </categories>
      
      
        <tags>
            
            <tag> usage </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
